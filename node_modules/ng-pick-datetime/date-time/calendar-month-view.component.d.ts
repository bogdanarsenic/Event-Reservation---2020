import { AfterContentInit, ChangeDetectorRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';
import { DateTimeAdapter } from './adapter/date-time-adapter.class';
import { OwlDateTimeFormats } from './adapter/date-time-format.class';
import { SelectMode } from './date-time.class';
import * as ɵngcc0 from '@angular/core';
export declare class OwlMonthViewComponent<T> implements OnInit, AfterContentInit, OnDestroy {
    private cdRef;
    private dateTimeAdapter;
    private dateTimeFormats;
    hideOtherMonths: boolean;
    private _firstDayOfWeek;
    firstDayOfWeek: number;
    private _selectMode;
    selectMode: SelectMode;
    private _selected;
    selected: T | null;
    private _selecteds;
    selecteds: T[];
    private _pickerMoment;
    pickerMoment: T;
    private _dateFilter;
    dateFilter: (date: T) => boolean;
    private _minDate;
    minDate: T | null;
    private _maxDate;
    maxDate: T | null;
    private _weekdays;
    readonly weekdays: {
        long: string;
        short: string;
        narrow: string;
    }[];
    private _days;
    readonly days: CalendarCell[][];
    readonly activeCell: number;
    readonly isInSingleMode: boolean;
    readonly isInRangeMode: boolean;
    private firstDateOfMonth;
    private localeSub;
    private initiated;
    private dateNames;
    todayDate: number | null;
    selectedDates: number[];
    firstRowOffset: number;
    readonly selectedChange: EventEmitter<T>;
    readonly userSelection: EventEmitter<void>;
    readonly pickerMomentChange: EventEmitter<T>;
    calendarBodyElm: OwlCalendarBodyComponent;
    readonly owlDTCalendarView: boolean;
    constructor(cdRef: ChangeDetectorRef, dateTimeAdapter: DateTimeAdapter<T>, dateTimeFormats: OwlDateTimeFormats);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    selectCalendarCell(cell: CalendarCell): void;
    private selectDate;
    handleCalendarKeydown(event: KeyboardEvent): void;
    private generateWeekDays;
    private generateCalendar;
    private createDateCell;
    private isDateEnabled;
    private getValidDate;
    isSameMonth(dateLeft: T, dateRight: T): boolean;
    private setSelectedDates;
    private focusActiveCell;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OwlMonthViewComponent<any>>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OwlMonthViewComponent<any>, "owl-date-time-month-view", ["owlYearView"], {
    "hideOtherMonths": "hideOtherMonths";
    "firstDayOfWeek": "firstDayOfWeek";
    "selectMode": "selectMode";
    "selected": "selected";
    "selecteds": "selecteds";
    "pickerMoment": "pickerMoment";
    "dateFilter": "dateFilter";
    "minDate": "minDate";
    "maxDate": "maxDate";
}, {
    "selectedChange": "selectedChange";
    "userSelection": "userSelection";
    "pickerMomentChange": "pickerMomentChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItbW9udGgtdmlldy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY2FsZW5kYXItbW9udGgtdmlldy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJEQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIENoYW5nZURldGVjdG9yUmVmLCBFdmVudEVtaXR0ZXIsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDYWxlbmRhckNlbGwsIE93bENhbGVuZGFyQm9keUNvbXBvbmVudCB9IGZyb20gJy4vY2FsZW5kYXItYm9keS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGF0ZVRpbWVBZGFwdGVyIH0gZnJvbSAnLi9hZGFwdGVyL2RhdGUtdGltZS1hZGFwdGVyLmNsYXNzJztcbmltcG9ydCB7IE93bERhdGVUaW1lRm9ybWF0cyB9IGZyb20gJy4vYWRhcHRlci9kYXRlLXRpbWUtZm9ybWF0LmNsYXNzJztcbmltcG9ydCB7IFNlbGVjdE1vZGUgfSBmcm9tICcuL2RhdGUtdGltZS5jbGFzcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBPd2xNb250aFZpZXdDb21wb25lbnQ8VD4gaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBjZFJlZjtcbiAgICBwcml2YXRlIGRhdGVUaW1lQWRhcHRlcjtcbiAgICBwcml2YXRlIGRhdGVUaW1lRm9ybWF0cztcbiAgICBoaWRlT3RoZXJNb250aHM6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfZmlyc3REYXlPZldlZWs7XG4gICAgZmlyc3REYXlPZldlZWs6IG51bWJlcjtcbiAgICBwcml2YXRlIF9zZWxlY3RNb2RlO1xuICAgIHNlbGVjdE1vZGU6IFNlbGVjdE1vZGU7XG4gICAgcHJpdmF0ZSBfc2VsZWN0ZWQ7XG4gICAgc2VsZWN0ZWQ6IFQgfCBudWxsO1xuICAgIHByaXZhdGUgX3NlbGVjdGVkcztcbiAgICBzZWxlY3RlZHM6IFRbXTtcbiAgICBwcml2YXRlIF9waWNrZXJNb21lbnQ7XG4gICAgcGlja2VyTW9tZW50OiBUO1xuICAgIHByaXZhdGUgX2RhdGVGaWx0ZXI7XG4gICAgZGF0ZUZpbHRlcjogKGRhdGU6IFQpID0+IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfbWluRGF0ZTtcbiAgICBtaW5EYXRlOiBUIHwgbnVsbDtcbiAgICBwcml2YXRlIF9tYXhEYXRlO1xuICAgIG1heERhdGU6IFQgfCBudWxsO1xuICAgIHByaXZhdGUgX3dlZWtkYXlzO1xuICAgIHJlYWRvbmx5IHdlZWtkYXlzOiB7XG4gICAgICAgIGxvbmc6IHN0cmluZztcbiAgICAgICAgc2hvcnQ6IHN0cmluZztcbiAgICAgICAgbmFycm93OiBzdHJpbmc7XG4gICAgfVtdO1xuICAgIHByaXZhdGUgX2RheXM7XG4gICAgcmVhZG9ubHkgZGF5czogQ2FsZW5kYXJDZWxsW11bXTtcbiAgICByZWFkb25seSBhY3RpdmVDZWxsOiBudW1iZXI7XG4gICAgcmVhZG9ubHkgaXNJblNpbmdsZU1vZGU6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgaXNJblJhbmdlTW9kZTogYm9vbGVhbjtcbiAgICBwcml2YXRlIGZpcnN0RGF0ZU9mTW9udGg7XG4gICAgcHJpdmF0ZSBsb2NhbGVTdWI7XG4gICAgcHJpdmF0ZSBpbml0aWF0ZWQ7XG4gICAgcHJpdmF0ZSBkYXRlTmFtZXM7XG4gICAgdG9kYXlEYXRlOiBudW1iZXIgfCBudWxsO1xuICAgIHNlbGVjdGVkRGF0ZXM6IG51bWJlcltdO1xuICAgIGZpcnN0Um93T2Zmc2V0OiBudW1iZXI7XG4gICAgcmVhZG9ubHkgc2VsZWN0ZWRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxUPjtcbiAgICByZWFkb25seSB1c2VyU2VsZWN0aW9uOiBFdmVudEVtaXR0ZXI8dm9pZD47XG4gICAgcmVhZG9ubHkgcGlja2VyTW9tZW50Q2hhbmdlOiBFdmVudEVtaXR0ZXI8VD47XG4gICAgY2FsZW5kYXJCb2R5RWxtOiBPd2xDYWxlbmRhckJvZHlDb21wb25lbnQ7XG4gICAgcmVhZG9ubHkgb3dsRFRDYWxlbmRhclZpZXc6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoY2RSZWY6IENoYW5nZURldGVjdG9yUmVmLCBkYXRlVGltZUFkYXB0ZXI6IERhdGVUaW1lQWRhcHRlcjxUPiwgZGF0ZVRpbWVGb3JtYXRzOiBPd2xEYXRlVGltZUZvcm1hdHMpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBzZWxlY3RDYWxlbmRhckNlbGwoY2VsbDogQ2FsZW5kYXJDZWxsKTogdm9pZDtcbiAgICBwcml2YXRlIHNlbGVjdERhdGU7XG4gICAgaGFuZGxlQ2FsZW5kYXJLZXlkb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBwcml2YXRlIGdlbmVyYXRlV2Vla0RheXM7XG4gICAgcHJpdmF0ZSBnZW5lcmF0ZUNhbGVuZGFyO1xuICAgIHByaXZhdGUgY3JlYXRlRGF0ZUNlbGw7XG4gICAgcHJpdmF0ZSBpc0RhdGVFbmFibGVkO1xuICAgIHByaXZhdGUgZ2V0VmFsaWREYXRlO1xuICAgIGlzU2FtZU1vbnRoKGRhdGVMZWZ0OiBULCBkYXRlUmlnaHQ6IFQpOiBib29sZWFuO1xuICAgIHByaXZhdGUgc2V0U2VsZWN0ZWREYXRlcztcbiAgICBwcml2YXRlIGZvY3VzQWN0aXZlQ2VsbDtcbn1cbiJdfQ==