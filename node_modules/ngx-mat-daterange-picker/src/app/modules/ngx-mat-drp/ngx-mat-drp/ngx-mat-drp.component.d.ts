import { OnInit, EventEmitter, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { DatePipe } from '@angular/common';
import { CalendarOverlayService } from '../services/calendar-overlay.service';
import { RangeStoreService } from '../services/range-store.service';
import { Range, NgxDrpOptions } from '../model/model';
import { ConfigStoreService } from '../services/config-store.service';
import * as ɵngcc0 from '@angular/core';
export declare class NgxMatDrpComponent implements OnInit, OnDestroy {
    private changeDetectionRef;
    private calendarOverlayService;
    rangeStoreService: RangeStoreService;
    configStoreService: ConfigStoreService;
    private datePipe;
    calendarInput: any;
    readonly selectedDateRangeChanged: EventEmitter<Range>;
    options: NgxDrpOptions;
    private rangeUpdate$;
    selectedDateRange: string;
    constructor(changeDetectionRef: ChangeDetectorRef, calendarOverlayService: CalendarOverlayService, rangeStoreService: RangeStoreService, configStoreService: ConfigStoreService, datePipe: DatePipe);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private formatToDateString(date, format);
    openCalendar(event: any): void;
    resetDates(range: Range): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxMatDrpComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxMatDrpComponent, "ngx-mat-drp", never, {
    "options": "options";
}, {
    "selectedDateRangeChanged": "selectedDateRangeChanged";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdC1kcnAuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm5neC1tYXQtZHJwLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBTUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0LCBFdmVudEVtaXR0ZXIsIE9uRGVzdHJveSwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGVQaXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENhbGVuZGFyT3ZlcmxheVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9jYWxlbmRhci1vdmVybGF5LnNlcnZpY2UnO1xuaW1wb3J0IHsgUmFuZ2VTdG9yZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9yYW5nZS1zdG9yZS5zZXJ2aWNlJztcbmltcG9ydCB7IFJhbmdlLCBOZ3hEcnBPcHRpb25zIH0gZnJvbSAnLi4vbW9kZWwvbW9kZWwnO1xuaW1wb3J0IHsgQ29uZmlnU3RvcmVTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvY29uZmlnLXN0b3JlLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmd4TWF0RHJwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0aW9uUmVmO1xuICAgIHByaXZhdGUgY2FsZW5kYXJPdmVybGF5U2VydmljZTtcbiAgICByYW5nZVN0b3JlU2VydmljZTogUmFuZ2VTdG9yZVNlcnZpY2U7XG4gICAgY29uZmlnU3RvcmVTZXJ2aWNlOiBDb25maWdTdG9yZVNlcnZpY2U7XG4gICAgcHJpdmF0ZSBkYXRlUGlwZTtcbiAgICBjYWxlbmRhcklucHV0OiBhbnk7XG4gICAgcmVhZG9ubHkgc2VsZWN0ZWREYXRlUmFuZ2VDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8UmFuZ2U+O1xuICAgIG9wdGlvbnM6IE5neERycE9wdGlvbnM7XG4gICAgcHJpdmF0ZSByYW5nZVVwZGF0ZSQ7XG4gICAgc2VsZWN0ZWREYXRlUmFuZ2U6IHN0cmluZztcbiAgICBjb25zdHJ1Y3RvcihjaGFuZ2VEZXRlY3Rpb25SZWY6IENoYW5nZURldGVjdG9yUmVmLCBjYWxlbmRhck92ZXJsYXlTZXJ2aWNlOiBDYWxlbmRhck92ZXJsYXlTZXJ2aWNlLCByYW5nZVN0b3JlU2VydmljZTogUmFuZ2VTdG9yZVNlcnZpY2UsIGNvbmZpZ1N0b3JlU2VydmljZTogQ29uZmlnU3RvcmVTZXJ2aWNlLCBkYXRlUGlwZTogRGF0ZVBpcGUpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIGZvcm1hdFRvRGF0ZVN0cmluZyhkYXRlLCBmb3JtYXQpO1xuICAgIG9wZW5DYWxlbmRhcihldmVudDogYW55KTogdm9pZDtcbiAgICByZXNldERhdGVzKHJhbmdlOiBSYW5nZSk6IHZvaWQ7XG59XG4iXX0=